---------------------PROCEDIMIENTOS Y FUNCIONES--------------------------------

/*
1- CREACION EL ONJETO
   CODIGO FUENTE
   CODIGO PSEUDO-COMPILADO

2- INVOCAR EN CUALQUIER MOMENTO (SQL)

NOS PERMITE CREAR PROGRAMAS PL/SQL QUE GUARDAMOS DENTRO DE LA BASE DE DATOS Y
QUE LUEGO PODEMOS REUTILIZAR
*/

-----------------------------CREAR UN PROCEDIMIENTO----------------------------
--LOS BLOQUES ANONIMOS CUNADO LOS LANZO SE EJECUTAN PERO LOS PROCEDIMIENTOS NO
--CUANDO CREO UN PROCEDIMIENTO SE GUARDA EN LA BASE DE DATOS.
SET SERVEROUTPUT ON
CREATE OR REPLACE PROCEDURE PR1
IS
X NUMBER:=10;
BEGIN
DBMS_OUTPUT.PUT_LINE(X);
END;
/
----------------VER CODIGO FUENTES DE PROCEDIMIENTOS Y FUNCIONES----------------
--USER_OBJECTS

SELECT * FROM USER_OBJECTS WHERE OBJECT_TYPE='PROCEDURE'; 

SELECT OBJECT_TYPE,COUNT(*) FROM USER_OBJECTS GROUP BY OBJECT_TYPE;

SELECT * FROM USER_SOURCE WHERE NAME='PR1';

--------------------------PARAMETRO DE TIPO IN ---------------------------------
CREATE OR REPLACE PROCEDURE CALC_TAX
(EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,
T1 IN NUMBER)
IS
TAX NUMBER:=0;
SAL NUMBER:=0;
BEGIN
 IF T1 < 0 OR T1 > 60 THEN
 RAISE_APPLICATION_ERROR(-20000,'EL PORCENTAJE DEBE ESTAR ENTRE 0 Y 60');
 END IF;
SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
TAX:=SAL*T1/100;
DBMS_OUTPUT.PUT_LINE('SALARY: '||SAL);
DBMS_OUTPUT.PUT_LINE('TAX: '||TAX);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
END;
/
 
-------------------------------PARAMETRO DE TIPO OUT----------------------------
--Permite devolver un valor desde dentro del procedimiento


CREATE OR REPLACE PROCEDURE CALC_TAX_OUT
(EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,
T1 IN NUMBER,
R1 OUT NUMBER)
IS
SAL NUMBER :=0;
BEGIN
IF T1<0 OR T1 > 60 THEN
RAISE_APPLICATION_ERROR(-20000,'DEBE ESTAR ENTRE 0 Y 60');
END IF;
SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
R1:=SAL*T1/100;
DBMS_OUTPUT.PUT_LINE('SALARY: '||SAL);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
END;
/
--------------------------PARAMETRO DE TIPO IN OUT------------------------------
CREATE OR REPLACE PROCEDURE CALC_TAX_IN_OUT
(EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,
T1 IN OUT NUMBER)
IS
SAL NUMBER :=0;
BEGIN
IF T1<0 OR T1 > 60 THEN
RAISE_APPLICATION_ERROR(-20000,'DEBE ESTAR ENTRE 0 Y 60');
END IF;
SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;

DBMS_OUTPUT.PUT_LINE('T1: '||T1);
T1:=SAL*T1/100;
DBMS_OUTPUT.PUT_LINE('SALARY: '||SAL);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
END;
/

---------------------------------FUNCTION------------------------------------
CREATE OR REPLACE FUNCTION CALC_TAX_F(
EMPL IN EMPLOYEES.EMPLOYEE_ID%TYPE,
T1 IN NUMBER)
RETURN NUMBER
IS
TAX NUMBER:=0;
SAL NUMBER:=0;
BEGIN
IF T1 < 0 OR T1 > 60 THEN
RAISE_APPLICATION_ERROR(-20000,'EL PORCENTAJ DEBE ESTAR ENTRE 0 Y 60');
END IF;
SELECT SALARY INTO SAL FROM EMPLOYEES WHERE EMPLOYEE_ID=EMPL;
TAX:=SAL*T1/100;
RETURN TAX;
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('NO EXISTE EL EMPLEADO');
END;
/

--------------------------FUNCIONES EN COMANDO SQL -----------------------------

SELECT FIRST_NAME,SALARY,CALC_TAX_F(EMPLOYEE_ID,18) FROM EMPLOYEES;
--SOLO PUEDO TENER PARAMETRO DE TIPO IN
--LA FUNCION DEBE ESTAR EN LA DB

































