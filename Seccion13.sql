--------------------introduccion a triggers------------------------------------
/*LOS TRIGGERS LO PUEDO UTILIZAR PARA AUDITORIA,PARA CONTROL , SEGURIDAD
PARA CAMBIAR LA LOGICA DE NEGOCIO
*/

----------------------TRIGGERS DML TIPOS EVENTOS--------------------------------
/*
TIPOS                 EVENTOS                   FILAS AFECTADAS

BEFORE                INSERT                  STATEMENT (SE DISPARA UNA VEZ)


AFTER      ===>       UPDATE                   ROW(SE DISPARA DEPENDIENDO LA FUNCION)


INSTEAD OF             DELETE

*/

----------------------------CREAR TRIGGERS------------------------------------

CREATE OR REPLACE TRIGGER INS_EMPL
AFTER INSERT ON REGIONS
BEGIN
INSERT INTO LOG_TABLE VALUES('INSERCION EN LA TABLA REGIONS',USER);
END;
/
---------------------------CREAR TRIGGERS CON EVENTOS--------------------------
-- SE DISPARA SOLO SI ALGUIEN INTENTA MODIFICAR LA COLUMNA NOMBRE PERO NO SI ES OTRA COLUMNA SOLO AL HACER UN UPDATE
CREATE OR REPLACE TRIGGER TR1_REGION
BEFORE INSERT OR UPDATE OF REGION_NAME OR DELETE
ON REGIONS
BEGIN
IF USER <> 'HR' THEN
RAISE_APPLICATION_ERROR(-20000,'SOLO HR PUEDE MODIFICAR EN REGION');
END IF;
END;
/
-------------------------CONTROLAR EL TIPO DE EVENTO---------------------

CREATE OR REPLACE TRIGGER TR1_REGION
BEFORE INSERT OR UPDATE  OR DELETE
ON REGIONS
BEGIN
IF INSERTING THEN
INSERT INTO LOG_TABLE VALUES('INSERCION',USER);
END IF;
IF UPDATING ('REGION_NAME') THEN
INSERT INTO log_table VALUES('UPDATE',USER);
END IF;
IF DELETING THEN
INSERT INTO log_table VALUES('DELETE',USER);
END IF;
END;
/

----------------------------CREAR TIPOS DE TRIGGERS ROW----------------------------

CREATE OR REPLACE TRIGGER TR1_REGION
BEFORE INSERT OR UPDATE  OR DELETE
ON REGIONS
FOR EACH ROW
BEGIN
IF INSERTING THEN
:NEW.REGION_NAME:=UPPER(:NEW.REGION_NAME);
INSERT INTO LOG_TABLE VALUES('INSERCION',USER);
END IF;
IF UPDATING ('REGION_NAME') THEN
:NEW.REGION_NAME:=UPPER(:NEW.REGION_NAME);
INSERT INTO log_table VALUES('UPDATE',USER);
END IF;
IF DELETING THEN
INSERT INTO log_table VALUES('DELETE',USER);
END IF;
END;
/

--------------------------------CLAUSULA WHEN----------------------------------

CREATE OR REPLACE TRIGGER TR1_REGION
BEFORE INSERT OR UPDATE  OR DELETE
ON REGIONS
FOR EACH ROW
WHEN(NEW.REGION_ID > 1000)
BEGIN
IF INSERTING THEN
:NEW.REGION_NAME:=UPPER(:NEW.REGION_NAME);
INSERT INTO LOG_TABLE VALUES('INSERCION',USER);
END IF;
IF UPDATING ('REGION_NAME') THEN
:NEW.REGION_NAME:=UPPER(:NEW.REGION_NAME);
INSERT INTO log_table VALUES('UPDATE',USER);
END IF;
IF DELETING THEN
INSERT INTO log_table VALUES('DELETE',USER);
END IF;
END;
/

------------------------COMPROBAR EL  ESTADO DE LOS TRIGGERS--------------------
DESC USER_TRIGGERS

SELECT TRIGGER_NAME,TRIGGER_TYPE FROM USER_TRIGGERS;
SELECT OBJECT_NAME,OBJECT_TYPE,STATUS FROM USER_OBJECTS WHERE OBJECT_TYPE='TRIGGER';

----------------TRABAJAR EN MODO COMANDO CON LOS TRIGGERS----------------------

ALTER TRIGGER TR1_REGION COMPILE;

SELECT * FROM USER_ERRORS;--ME MUESTRA LOS ERRORRES

ALTER TRIGGER TR1_REGION DISABLE;--ME PERMITE DESACTIVAR AL TRIGGERS


ALTER TRIGGER TR1_REGION ENABLE;--ACTIVA EL TRIGGERS





































